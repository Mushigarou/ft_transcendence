version: '3.8'

services:
    setup:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
        container_name: setup
        volumes:
            - certs:/usr/share/elasticsearch/config/certs
            - ./tools/setup_es_certs.sh:/usr/share/elasticsearch/setup_es_certs.sh
        user: '0'
        command: >
            /bin/bash /usr/share/elasticsearch/setup_es_certs.sh
        environment:
            ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
            KIBANA_PASSWORD: ${KIBANA_PASSWORD}
        healthcheck:
            test: ['CMD-SHELL', '[ -f config/certs/elasticsearch/elasticsearch.crt ]']
            interval: 1s
            timeout: 5s
            retries: 120
        networks:
            - ft_transcendence

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
        container_name: elasticsearch
        volumes:
            - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
            - certs:/usr/share/elasticsearch/config/certs
            - elasticsearchdata:/usr/share/elasticsearch/data
        ports:
            - '9200:9200'
        environment:
            ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
        mem_limit: ${MEM_LIMIT}
        ulimits:
            memlock: { soft: -1, hard: -1 }
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
                ]
            interval: 10s
            timeout: 10s
            retries: 120
        depends_on:
            setup:
                condition: service_healthy
        networks:
            - ft_transcendence

    kibana:
        image: docker.elastic.co/kibana/kibana:8.12.2
        container_name: kibana
        volumes:
            - certs:/usr/share/kibana/config/certs
            - kibanadata:/usr/share/kibana/data
            - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
        ports:
            - '5601:5601'
        environment:
            KIBANA_PASSWORD: ${KIBANA_PASSWORD}
        mem_limit: ${MEM_LIMIT}
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'curl -s --cacert config/certs/ca/ca.crt --insecure https://kibana:5601/api/status | grep -q available',
                ]
            interval: 10s
            timeout: 10s
            retries: 120
        depends_on:
            elasticsearch:
                condition: service_healthy
        networks:
            - ft_transcendence

    logstash:
        image: docker.elastic.co/logstash/logstash:8.12.2
        container_name: logstash
        user: root
        volumes:
            - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
            - ./logstash/pipeline:/usr/share/logstash/pipeline
            - certs:/usr/share/logstash/certs
        ports:
            - '5044:5044'
        environment:
            ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
        depends_on:
            elasticsearch:
                condition: service_healthy
            kibana:
                condition: service_healthy
        networks:
            - ft_transcendence

    filebeat:
        image: docker.elastic.co/beats/filebeat:8.12.2
        container_name: filebeat
        user: root
        volumes:
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
            - certs:/usr/share/filebeat/certs
        depends_on:
            - logstash
        networks:
            - ft_transcendence

volumes:
    certs:
        name: certs
    elasticsearchdata:
        name: elasticsearchdata
    kibanadata:
        name: kibanadata

networks:
    ft_transcendence:
        name: ft_transcendence
        driver: bridge
