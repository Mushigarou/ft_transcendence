services:
    prometheus:
        container_name: prometheus
        restart: unless-stopped
        build:
            context: ./prometheus
            dockerfile: Dockerfile
            args:
              - PROMETHEUS_PASSWORD=${PROMETHEUS_PASSWORD}
        volumes:
            - ./prometheus/data:/prometheus/data
        ports:
            - '9090:9090'
        networks:
            - ft_transcendence

    grafana:
        container_name: grafana
        restart: unless-stopped
        build:
            context: ./grafana
            dockerfile: Dockerfile
        volumes:
            - ./grafana/provisioning:/etc/grafana/provisioning
            - ./grafana/dashboards:/var/lib/grafana/dashboards
            - ./grafana/data:/var/lib/grafana
        env_file:
            - .env
        ports:
            - '3002:3002'
        networks:
            - ft_transcendence

    alertmanager:
      container_name: alertmanager
      restart: unless-stopped
      build:
        context: ./alertmanager
        dockerfile: Dockerfile
        args:
          - SMTP_TO=${SMTP_TO}
          - SMTP_FROM=${SMTP_FROM}
          - SMTP_SMARTHOST=${SMTP_SMARTHOST}
          - SMTP_AUTH_USERNAME=${SMTP_AUTH_USERNAME}
          - SMTP_AUTH_IDENTITY=${SMTP_AUTH_IDENTITY}
          - SMTP_AUTH_PASSWORD=${SMTP_AUTH_PASSWORD}
      volumes:
        - ./alertmanager/data:/alertmanager/data
      networks:
        - ft_transcendence

    cadvisor:
      container_name: cadvisor
      restart: unless-stopped
      # privileged: true
      build:
        context: ./exporters/cadvisor
        dockerfile: Dockerfile
      volumes:
        - /:/rootfs:ro
        - /var/run/docker.sock:/var/run/docker.sock:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro
      networks:
        - ft_transcendence

    redis-exporter:
      container_name: redis-exporter
      restart: unless-stopped
      build:
        context: ./exporters/redis-exporter
        dockerfile: Dockerfile
      environment:
        - REDIS_ADDR=${REDIS_ADDR}
      networks:
        - ft_transcendence

    postgres-exporter:
      container_name: postgres-exporter
      restart: unless-stopped
      build:
        context: ./exporters/postgres-exporter
        dockerfile: Dockerfile
      environment:
        - DATA_SOURCE_NAME=${DATA_SOURCE_NAME}
      networks:
        - ft_transcendence

    elasticsearch-exporter:
      container_name: elasticsearch-exporter
      restart: unless-stopped
      build:
        context: ./exporters/elasticsearch-exporter
        dockerfile: Dockerfile
        args:
          - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      networks:
        - ft_transcendence

networks:
    ft_transcendence:
        name: ft_transcendence
        driver: bridge
        external: true
