services:
    back-end:
        container_name: back-end
        image: back-end:42
        build:
            context: ./app/back-end
            dockerfile: Dockerfile
        restart: always
        env_file:
            - .env
        volumes:
            - ./app/back-end:/back-end
            - v_data-base:/var/lib/postgresql/data
        networks:
            - ft_transcendence

    front-end:
        container_name: front-end
        image: front-end:42
        build:
            context: ./app/front-end
            dockerfile: Dockerfile
        restart: always
        env_file:
            - .env
        volumes:
            - .env:/front-end/.env
            - ./app/front-end/src/lint-results.log:/front-end/lint-results.log
            - ./app/front-end/src:/front-end/src
            - ./app/front-end/public:/front-end/public
            - ./app/front-end/package.json:/front-end/package.json
            - ./app/front-end/package-lock.json:/front-end/package-lock.json
        networks:
            - ft_transcendence

    data-base:
        container_name: data-base
        image: data-base:42
        build:
            context: ./app/data-base
            dockerfile: Dockerfile
        restart: always
        ports:
            - '5432:5432'
        env_file:
            - .env
        volumes:
            - v_data-base:/var/lib/postgresql/data
        networks:
            - ft_transcendence

    nginx:
        container_name: nginx
        image: nginx:42
        build:
            context: ./services/nginx
            dockerfile: Dockerfile
        restart: always
        ports:
            - '80:80'
            - '443:443'
        env_file:
            - .env
        networks:
            - ft_transcendence

    adminer:
        container_name: adminer
        image: adminer:42
        build:
            context: ./services/adminer
            dockerfile: Dockerfile
        restart: always
        ports:
            - 8080:8080
        networks:
            - ft_transcendence

    redis:
        container_name: redis
        image: redis:42
        build:
            context: ./services/redis
            dockerfile: Dockerfile
        restart: on-failure
        ports:
            - '6379:6379'
        env_file:
            - .env
        networks:
            - ft_transcendence

volumes:
    v_data-base:
        name: v_data-base
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ${HOME}/Desktop/data

networks:
    ft_transcendence:
        name: ft_transcendence
        driver: bridge
